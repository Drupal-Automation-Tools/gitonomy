{% extends "GitonomyFrontendBundle::layout.html.twig" %}

{% block title project.name %}

{% block content_javascript %}
    <script>
        data = {{ data|json_encode|raw }};

        var line_height = 15,
            padding     = 10,
            height      = data.length * line_height + 2*padding,
            width       = 900 + 2*padding
        ;

        var xAxis = d3.scale.pow().exponent(2)
            .domain([0, data.length])
            .range([padding, 500])
        ;

        var yAxis = d3.scale.pow().exponent(.7)
            .domain([0, data.length])
            .range([padding, height - 2*padding])
        ;

        var history = d3.select("#history")
            .append('svg')
            .attr('width', width)
            .attr('height', height)
        ;

        var graph = commit_graph(data);

        var commits = history
            .selectAll('circle')
            .data(graph.nodes())
        ;

        var links = history
            .selectAll('path')
            .data(graph.links())
        ;

        var commit_line = d3.svg.line()
            .x(function (d) {
                return xAxis(d.x);
            })
            .y(function (d) {
                return yAxis(d.y);
            })
        ;

        var g = commits.enter().append('g');

        //g.append('text')
        //    .attr('transform', function (node) {
        //        return "translate(" + xAxis(node.x+1) + "," + yAxis(node.y) + ")";
        //    })
        //    .text(function (node) {
        //        return node.short_message;
        //    })
        //;

        g.append('circle')
            .attr('cx', function (node) {
                return xAxis(node.x);
            })
            .attr('cy', function (node) {
                return yAxis(node.y);
            })
            .attr('r', 4)
        ;

        links.enter()
            .append('path')
            .attr('d', commit_line)
            .style('stroke', 'black')
            .style('stroke-width', '1')
            .attr('radius', 0.1)
            .style('fill', 'none')

        function commit_graph(commits) {
            var positions = {},
                position,
                link
            ;

            commits.forEach(function (commit, i) {
                commits[i].x = i;
                commits[i].y = i;
                commits[i].children = [];
                positions[commit.hash] = i;
            });

            commits.forEach(function (commit, i) {
                commit.parents.forEach(function (parent) {
                    if (positions[parent] == undefined) {
                        return;
                    }

                    position = positions[parent];
                    commits[position].children.push(commit.hash);
                });
            });

            function createParentLink(from, to) {
                link = [];
                link.push({
                    x: commits[positions[from]].x,
                    y: commits[positions[from]].y
                });
                if (positions[to] == undefined) {
                    link.push({
                        x: commits[positions[from]].x,
                        y: 10000
                    });
                } else {
                    link.push({
                        x: commits[positions[to]].x,
                        y: commits[positions[to]].y
                    });
                }

                return link;
            };

            return {
                nodes: function () {

                    return commits;
                },

                links: function () {
                    links = [];

                    for (i in commits) {
                        commit = commits[i];
                        hash = commit.hash;

                        commit.parents.forEach(function (parent) {
                            links.push(createParentLink(hash, parent));
                        });
                    }

                    return links;
                }
            };
        }
    </script>
{% endblock %}

{% block content %}
    <div class="page-header">
        <h1>{{ project.name }}</h1>
    </div>
    {% render "GitonomyFrontendBundle:Project:blockNavigation" with {slug: project.slug, active: 'history', reference: reference } %}
    <div class="page-header">
        <h2>History</h2>
    </div>
    <div id="history"></div>
{% endblock %}
